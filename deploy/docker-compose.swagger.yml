version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: mongodb-swagger
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: auth_db
    volumes:
      - mongodb_data:/data/db
    networks:
      - microservices-network

  # Auth Service
  auth-service:
    build:
      context: ../backend/auth-service
      dockerfile: Dockerfile
    container_name: auth-service-swagger
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - PORT=8081
      - MONGO_URI=mongodb://admin:password@mongodb:27017
      - MONGO_DB=auth_db
      - JWT_SECRET=your-super-secret-jwt-key
    depends_on:
      - mongodb
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # User Service
  user-service:
    build:
      context: ../backend/user-service
      dockerfile: Dockerfile
    container_name: user-service-swagger
    restart: unless-stopped
    ports:
      - "8082:8082"
    environment:
      - PORT=8082
      - MONGO_URI=mongodb://admin:password@mongodb:27017
      - MONGO_DB=auth_db
    depends_on:
      - mongodb
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway with Swagger
  api-gateway:
    build:
      context: ../backend/api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway-swagger
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - AUTH_SERVICE_URL=http://auth-service:8081
      - USER_SERVICE_URL=http://user-service:8082
    depends_on:
      - auth-service
      - user-service
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:

networks:
  microservices-network:
    driver: bridge
